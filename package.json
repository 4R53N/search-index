{
  "name": "search-index",
  "description": "A text search index module for Node.js. Search-index allows applications to add, delete and retrieve documents from a corpus. Retrieved documents are ordered by tf-idf relevance, filtering on metadata, and field weighting",
  "version": "0.2.19",
  "homepage": "https://github.com/fergiemcdowall/search-index",
  "engines": {
    "node": ">=0.8.0"
  },
  "dependencies": {
    "async": "*",
    "bustermove": "*",
    "level": "*",
    "natural": "0.1.21"
  },
  "author": {
    "name": "Fergus McDowall",
    "email": "fergusmcdowall@gmail.com"
  },
  "keywords": [
    "natural",
    "language",
    "search",
    "index",
    "lucene"
  ],
  "main": "./lib/search-index.js",
  "maintainers": [
    {
      "name": "Fergus McDowall",
      "email": "fergusmcdowall@gmail.com",
      "url": "https://github.com/fergiemcdowall"
    }
  ],
  "readme": "Search-index\r\n============\r\n\r\n[![NPM](https://nodei.co/npm/search-index.png?stars&downloads)](https://nodei.co/npm/search-index/)\r\n\r\n[![NPM](https://nodei.co/npm-dl/search-index.png)](https://nodei.co/npm/search-index/)\r\n\r\n[![Build Status](https://secure.travis-ci.org/fergiemcdowall/search-index.png)](http://travis-ci.org/fergiemcdowall/search-index)\r\n\r\nSearch-index is a search index module for Node.js. Think \"node version\r\nof Lucene, but much simpler\".\r\n\r\nSearch-index allows you to perform free-text search over structured or unstructured data, and return\r\na resultset ordered by relevance.\r\n\r\nSearch-index is built with the [soooperfast levelUP module](https://github.com/rvagg/node-levelup), and the\r\n[very useful Natural module](https://github.com/NaturalNode/natural).\r\n\r\nThe Point of Search-Index is to simplify set up and operation of an\r\nsearch engine. Search-index is essentially free from configuration-\r\nthe index is dynamic and morphs into the structure that you require\r\nautomatically, based on the documents that it is fed.\r\n\r\n\r\nSearch-index is in an alpha stage- meaning that it has been known to\r\nwork quite well, but edge cases and portability may be\r\nchallenging. Query-result is robust. See known issues and performance\r\ntips below.\r\n\r\n\r\n#The Forage Search Engine\r\n\r\nSearch-index is currently the index powering the [Forage search engine](https://github.com/fergiemcdowall/forage).\r\n\r\n\r\n#Features\r\n\r\n* Full text search\r\n* Stopword removal\r\n* Faceting\r\n* Filtering\r\n* Fielded search\r\n* Field weighting\r\n* Relevance weighting (tf-idf)\r\n* Paging (offset and resultset length)\r\n\r\n#Installation\r\n\r\nReleases are listed [here](https://github.com/fergiemcdowall/search-index/releases). Generally you will want the most recent one.\r\n\r\nThe easiest way to include search-index in your project is by using npm\r\n\r\n    npm install search-index\r\n    \r\nThe module can then be initialised by including the line\r\n\r\n    si = require('search-index');\r\n    \r\nat the top of your app.\r\n\r\n#API\r\n\r\n##si.indexData([,callback])\r\n\r\nReturns metadata about the state of the index. Metadata is accrued\r\nincrementally, so it is vulnerable to corruption. At any time metadata\r\ncan be corrected by running the computationally demanding calibrate\r\nfunction.\r\n\r\n```javascript\r\nsi.indexData(function(msg) {\r\n  console.log(msg);\r\n});\r\n```\r\n\r\n##si.calibrate([,callback])\r\n\r\nIterate through entire index and count everything up. Tf-idf\r\ncalculations are most precise when indexData is up to date. Only needs\r\nto be called if index has been altered externally, or if key\r\ncollisions occur (mostly theoretical). A persistant running tally is\r\nkept by search-index which can be seen in the file search-index.json.\r\n\r\n\r\n```javascript\r\nsi.calibrate(function(msg) {\r\n  console.log(msg);\r\n});\r\n```\r\n\r\n##si.indexPeek(start, stop [,callback])\r\n\r\nTake a look at the raw index. Start is the start point and stop is the\r\nstop point. All keys in between will be returned. For debug purposes.\r\n\r\n```javascript\r\nsi.indexPeek(req.query['start'], req.query['stop'], function(msg) {\r\n  console.log(msg);\r\n});\r\n```\r\n\r\n##si.deleteDoc(req.body.docID [,callback])\r\n\r\nDelete the document and all associated index entries.\r\n\r\n```javascript\r\nsi.deleteDoc(documentID, function(msg) {\r\n  console.log(msg);\r\n});\r\n```\r\n\r\n##si.search(query, [,callback])\r\n\r\nQueries the search index\r\n\r\n```javascript\r\nsi.search(query, function(msg) {\r\n  res.send(msg);\r\n});\r\n```\r\n\r\n...where query is an object similar to (see Query Parameters for more\r\ninfo):\r\n\r\n```javascript\r\n    {\r\n    \"query\": [\r\n      \"usa\"\r\n    ],\r\n    \"offset\": \"0\",\r\n    \"pagesize\": \"20\",\r\n    \"facets\": [\r\n      \"places\",\r\n      \"organisations\"\r\n    ],\r\n    \"weight\": {\r\n      \"title\": [\r\n        \"10\"\r\n      ]\r\n    },\r\n    \"filter\": {\r\n      \"places\": [\r\n        \"usa\"\r\n      ]\r\n    }\r\n  }\r\n```\r\n\r\n\r\n##si.index(batch, batchName, filters, [,callback])\r\n\r\nInsets document into the index\r\n\r\n\r\n```javascript\r\nsi.index(batch, batchName, filters, function(msg) {\r\n  res.send(msg);\r\n});\r\n```\r\n\r\nWhere ```batch``` is a JSON sequence named ```batchName``` containing one or more documents in a\r\nformat similar to:\r\n\r\n```javascript\r\n{\r\n  'doc1':{\r\n    'title':'A really interesting document',\r\n    'body':'This is a really interesting document',\r\n    'metadata':['red', 'potato']\r\n  },\r\n  'doc2':{\r\n    'title':'Another interesting document',\r\n    'body':'This is another really interesting document that is a bit different',\r\n    'metadata':['yellow', 'potato']\r\n  }\r\n}\r\n```\r\n\r\n...and ```filters``` is an array of field names that may be contained\r\nin the document that the index will use for building filters. A filter\r\nfield must always be an array of single String tokens, for example ```['metadata','places']```\r\n\r\n\r\n\r\n#Query Parameters\r\n\r\n##query\r\n\r\nA free text string containing one or many tokens. Search everything with ´´´´*´´´\r\n\r\n```javascript\r\n    \"query\": [\r\n      \"usa\"\r\n    ]\r\n```\r\n\r\n##searchFields\r\n\r\nFields to search in. Query will only search in the fields specified here.\r\n\r\n```javascript\r\n    \"searchFields\": [\r\n      \"title\"\r\n    ]\r\n```\r\n\r\n##offset\r\n\r\nThe starting point in the resultset of the results returned. Useful\r\nfor paging\r\n\r\n```javascript\r\n    \"offset\": 0\r\n```\r\n\r\n##pagesize\r\n\r\nThe maximum number of results in the resultset that can be\r\nreturned. Counted from ```offset```\r\n\r\n```javascript\r\n    \"pagesize\": 20\r\n```\r\n\r\n##facets\r\n\r\nAllows faceted navigation, the parameter is an array of fields. If no\r\n```facets``` is sent, all possible facets are returned.\r\n\r\n```javascript\r\n    \"facets\": [\r\n      \"topics\",\r\n      \"places\"\r\n    ]\r\n```\r\n\r\n##weight\r\n\r\nSets a factor by which the score of a field should be weighted. Useful\r\nfor building custom relevancy models\r\n\r\n```javascript\r\n    \"weight\": {\r\n      \"body\": [\r\n        \"10\"\r\n      ],\r\n      \"title\": [\r\n        \"5\"\r\n      ]\r\n    }\r\n```\r\n\r\n##filter\r\n\r\nUsed to return a resultset on a facet.\r\n\r\n```javascript\r\n    \"filter\": {\r\n      \"places\": [\r\n        \"ussr\"\r\n      ]\r\n    }\r\n```\r\n\r\n#License\r\n\r\nSearch-index is released under the MIT license:\r\n\r\nCopyright (c) 2013 Fergus McDowall\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining\r\na copy of this software and associated documentation files (the\r\n\"Software\"), to deal in the Software without restriction, including\r\nwithout limitation the rights to use, copy, modify, merge, publish,\r\ndistribute, sublicense, and/or sell copies of the Software, and to\r\npermit persons to whom the Software is furnished to do so, subject to\r\nthe following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be\r\nincluded in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n\r\n\r\n",
  "readmeFilename": "README.md",
  "_id": "search-index@0.2.19",
  "_from": "search-index@0.2.19",
  "dist": {
    "shasum": "c51c6f33cdd798a0305920412b7a391f3f437ef4"
  },
  "_resolved": "https://registry.npmjs.org/search-index/-/search-index-0.2.19.tgz"
}
